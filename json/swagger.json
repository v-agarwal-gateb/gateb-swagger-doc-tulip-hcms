{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "HCMS REST-API for Tulip/Content Hub .",
    "description" : "This is the contract of entities of the Headless CMS (HCMS) REST-API which is used to retrieve content and related metadata for TULIP/Content Hub GateB",
    "version" : "1.0.0"
  },
  "servers" : [ {
    "description" : "SwaggerHub API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/gateB-Dev/Tulip/1.0.0"
  }, {
    "description" : "SwaggerHub API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/gateB-India/Tulip/1.0.0"
  }, {
    "url" : "http://hcms-api.juliusbaer.com/hcms/v1.5"
  }, {
    "url" : "http://3.122.242.96:8080/hcms/v1.5"
  } ],
  "paths" : {
    "/entity/{entity}" : {
      "get" : {
        "tags" : [ "generic hcms api" ],
        "description" : "Provides read access to all entities. Parameters can be used to restrict result",
        "parameters" : [ {
          "name" : "entity",
          "in" : "path",
          "description" : "Name of the entity from which content should be retreived. For the demo purpose the following entities are exposed: tulipArticle, fundCompany, fund",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "fundCompany", "fund", "publication", "event", "rubric", "topic", "media", "codeList" ]
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "The query language allows specifying conditions using a dot separated path of JSON property names. This specifies the schema type to a filter optionally followed by of one of the comparison operators = , != , < , <= , >= , < , =^ and a JSON encoded value. =^ represents the prefix operator which can only be applied on string values. address.city=\"New York\" If the comparison operator and the value are missing the condition tests for the existence of a value (not null). adress.city The conditions can be combined using boolean logic with the operators in order of precedence ! , & , and | . address.city=\"New York\" & address.street=\"Broadway\" The precedence can also be modified by grouping the expressions using parenthesis ( , ) . address.city=\"New York\" & (address.street=\"Broadway\" | address.street=\"Park Avenue\").",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "description" : "defines a maximum number of the returned items. When missing, the default value from the configuration is used; if there is no such value configured, the default is 100. A negative or a zero value means unlimited; this is not recommended because this can cause a potentially huge result size",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "offset",
          "description" : "defines how many items since the beginning of the list is be skipped. When missing, 0 is used (i.e. no offset, listing starts at the very beginning). Negative values are silently ignored (and treated as 0). It is allowed for the offset to be higher than the total number of items (the result list is empty in this case). It is possible to have a positive offset with a negative (disabled) limit.",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation returns a set of object selected in the query",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "result" : {
                      "type" : "array",
                      "items" : {
                        "oneOf" : [ {
                          "$ref" : "#/components/schemas/fundCompany"
                        }, {
                          "$ref" : "#/components/schemas/fund"
                        }, {
                          "$ref" : "#/components/schemas/event"
                        }, {
                          "$ref" : "#/components/schemas/publication"
                        }, {
                          "$ref" : "#/components/schemas/rubric"
                        }, {
                          "$ref" : "#/components/schemas/topic"
                        }, {
                          "$ref" : "#/components/schemas/media"
                        }, {
                          "$ref" : "#/components/schemas/codeList"
                        } ]
                      }
                    },
                    "offset" : {
                      "description" : "offset used (0 when the offset parameter is missing or negative)",
                      "type" : "integer"
                    },
                    "limit" : {
                      "description" : "maximum number of items in the result",
                      "type" : "integer"
                    },
                    "count" : {
                      "description" : "the number of items in the result",
                      "type" : "integer"
                    },
                    "total-count" : {
                      "description" : "the total number of results (un-paged)",
                      "type" : "integer"
                    }
                  },
                  "required" : [ "result" ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "403" : {
            "description" : "Access forbidden"
          }
        }
      }
    },
    "/entity/fundCompany" : {
      "get" : {
        "tags" : [ "Content" ],
        "description" : "Provides read access to all Fund Companies (fundCompany). Parameters can be used to restrict result for example by changedate. Generic documentation of the api can be found above for /entity/{entity}.",
        "parameters" : [ {
          "name" : "query",
          "in" : "query",
          "description" : "",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation returns a set of content unit summary objects",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/fundCompany"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/entity/fund" : {
      "get" : {
        "tags" : [ "Content" ],
        "description" : "Provides read access to all Fund Companies (fundCompany). Parameters can be used to restrict result for example by changedate. Generic documentation of the api can be found above for /entity/{entity}.",
        "parameters" : [ {
          "name" : "query",
          "in" : "query",
          "description" : "",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation returns a set of content unit summary objects",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/fund"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/entity/publication" : {
      "get" : {
        "tags" : [ "Content" ],
        "description" : "Provides read access to all Fund Companies (FundCompany). Parameters can be used to restrict result for example by changedate. Generic documentation of the api can be found above for /entity/{entity}.",
        "parameters" : [ {
          "name" : "query",
          "in" : "query",
          "description" : "",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation returns a set of content unit summary objects",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/publication"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/entity/event" : {
      "get" : {
        "tags" : [ "Content" ],
        "description" : "Provides read access to all Fund Companies (fundCompany). Parameters can be used to restrict result for example by changedate. Generic documentation of the api can be found above for /entity/{entity}.",
        "parameters" : [ {
          "name" : "query",
          "in" : "query",
          "description" : "",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation returns a set of content unit summary objects",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/event"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/entity/rubric" : {
      "get" : {
        "tags" : [ "Categories" ],
        "description" : "Provides read access to all Fund Companies (fundCompany). Parameters can be used to restrict result for example by changedate. Generic documentation of the api can be found above for /entity/{entity}.",
        "parameters" : [ {
          "name" : "query",
          "in" : "query",
          "description" : "",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation returns a set of content unit summary objects",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/rubric"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/entity/topic" : {
      "get" : {
        "tags" : [ "Categories" ],
        "description" : "Provides read access to all Fund Companies (fundCompany). Parameters can be used to restrict result for example by changedate. Generic documentation of the api can be found above for /entity/{entity}.",
        "parameters" : [ {
          "name" : "query",
          "in" : "query",
          "description" : "",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation returns a set of content unit summary objects",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/rubric"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/entity/media/{id}" : {
      "get" : {
        "tags" : [ "Images, Downloads, Files" ],
        "description" : "Information for a single Media",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Media ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation returns a set of content unit summary objects",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/media"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/entity/codeList" : {
      "get" : {
        "tags" : [ "Translation for KeyValues, Feature-Labels" ],
        "description" : "Provides read access to all Fund Companies (fundCompany). Parameters can be used to restrict result for example by changedate. Generic documentation of the api can be found above for /entity/{entity}.",
        "parameters" : [ {
          "name" : "query",
          "in" : "query",
          "description" : "",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation returns a set of content unit summary objects",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/codeList"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "fundCompany" : {
        "description" : "A fund provider reflects a piece of content in censhare represented by a company asset. A contnet unit consist one one hand of the content itself like text in different languages and images. On the other hand metadata related to the content unit is maintained in censhare. The content unit summary provides mainly metadata and linkt to get the content itself. Example asset id: #1229559",
        "type" : "object",
        "properties" : {
          "companyLink" : {
            "description" : "Company Link.",
            "properties" : {
              "<language>" : {
                "type" : "string"
              }
            },
            "type" : "object"
          },
          "companyLogo" : {
            "description" : "Company Logo.",
            "properties" : {
              "assetId" : {
                "type" : "string"
              },
              "url" : {
                "$ref" : "#/components/schemas/media"
              }
            },
            "type" : "object"
          },
          "creationDate" : {
            "description" : "date/time of the Fund Company Asset creation, in ISO 8601 UTC encoding. Examples: 2019-03-25T11:57:32.123Z, 2019-03-25T11:57:32Z",
            "format" : "date-time",
            "type" : "string"
          },
          "cuid" : {
            "description" : "Unique Content ID to identify the content",
            "type" : "integer"
          },
          "id" : {
            "description" : "The CMS internal identifier of the asset holding the generated content of the content unit.",
            "type" : "integer"
          },
          "keyFacts" : {
            "description" : "Key facts of a Fund Company. It will come from Metadata???",
            "properties" : {
              "<sortingNo>" : {
                "properties" : {
                  "label" : {
                    "type" : "string"
                  },
                  "language" : {
                    "format" : "enum[en,de,it,fr]",
                    "type" : "string"
                  },
                  "value" : {
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "type" : "object"
          },
          "modifiedDate" : {
            "description" : "date/time of the Fund Company Asset was last modified, in ISO 8601 UTC encoding. Examples: 2019-03-25T11:57:32.123Z, 2019-03-25T11:57:32Z",
            "format" : "date-time",
            "type" : "string"
          },
          "name" : {
            "description" : "[Tulip001] The internal name of the Fund Company Asset.",
            "type" : "string"
          },
          "publicationDate" : {
            "description" : "date/time of the Fund Company Asset was last modified, in ISO 8601 UTC encoding. Examples: 2019-03-25T11:57:32.123Z, 2019-03-25T11:57:32Z",
            "format" : "date-time",
            "type" : "string"
          },
          "publicationState" : {
            "description" : "Writer can mark Assets either as deleted or archived. These  will still be available through HCMS and marked with publicatation State archived respectively deleted. All content available for the client is in state published.",
            "format" : "enum[published, archived, deleted]",
            "type" : "string"
          },
          "validFrom" : {
            "description" : "date/time when the Company validity period starts, in ISO 8601 UTC encoding. Examples: 2019-03-25T11:57:32.123Z, 2019-03-25T11:57:32Z",
            "format" : "date-time",
            "type" : "string"
          },
          "validTo" : {
            "description" : "date/time when the Company validity period ends, in ISO 8601 UTC encoding. Examples: 2019-03-25T11:57:32.123Z, 2019-03-25T11:57:32Z",
            "format" : "date-time",
            "type" : "string"
          },
          "version" : {
            "description" : "The version of the Fund Company Asset. The version is increased for any change of the Fund Company Asset that is published.",
            "type" : "integer"
          },
          "funds" : {
            "description" : "Funds of a Fund Company",
            "type" : "object",
            "properties" : {
              "<fundID>" : {
                "$ref" : "#/components/schemas/fund"
              }
            }
          },
          "events" : {
            "type" : "object",
            "properties" : {
              "<assetID>" : {
                "$ref" : "#/components/schemas/event"
              }
            }
          },
          "text" : {
            "description" : "List of the urls to load text of the Company in different languages.",
            "type" : "object",
            "properties" : {
              "<language>" : {
                "type" : "object",
                "properties" : {
                  "id" : {
                    "type" : "integer"
                  },
                  "url" : {
                    "description" : "URL of content",
                    "type" : "string"
                  },
                  "version" : {
                    "description" : "???",
                    "type" : "integer"
                  }
                }
              }
            }
          }
        },
        "required" : [ "publicationDate", "name", "companyLogo", "keyFacts", "text", "link" ]
      },
      "fund" : {
        "description" : "fundi fundi",
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "image" : {
            "type" : "string"
          },
          "shortCaption" : {
            "type" : "string"
          },
          "longCaption" : {
            "type" : "string"
          },
          "language" : {
            "description" : "language based on ISO 639-1",
            "type" : "string"
          },
          "classification" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "classificationKey" : {
                  "type" : "string"
                },
                "classificationValue" : {
                  "type" : "string"
                },
                "language" : {
                  "type" : "string",
                  "description" : "--> Assumption classifiction key and values are not translated. Therefore no language attribute is required"
                }
              }
            }
          }
        }
      },
      "event" : {
        "description" : "Events for a Fund Company",
        "properties" : {
          "name" : {
            "description" : "Name of the Event",
            "type" : "string"
          },
          "date" : {
            "description" : "Date of the Event",
            "type" : "string"
          },
          "unit" : {
            "description" : "Unit of the Event. where will user enter it? we can have an asset for this???",
            "type" : "string"
          },
          "contact" : {
            "description" : "Contact Person of an even. PERSON ASSET??",
            "type" : "string"
          },
          "booking" : {
            "description" : "Booking???",
            "type" : "string"
          },
          "information" : {
            "description" : "More Information about",
            "type" : "object",
            "properties" : {
              "<language>" : {
                "type" : "object",
                "properties" : {
                  "id" : {
                    "type" : "integer"
                  },
                  "content" : {
                    "description" : "Even Asset Text",
                    "type" : "string"
                  },
                  "version" : {
                    "description" : "???",
                    "type" : "integer"
                  }
                }
              }
            }
          }
        }
      },
      "publication" : {
        "description" : "bla bla"
      },
      "rubric" : {
        "description" : "bla bla"
      },
      "topic" : {
        "description" : "bla bla"
      },
      "media" : {
        "description" : "mediaAsset"
      },
      "codeList" : {
        "description" : "Code List Description"
      }
    }
  }
}